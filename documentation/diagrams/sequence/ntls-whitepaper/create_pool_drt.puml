@startuml create_pool_drt
!include style.puml

skinparam BoxPadding 10

actor "Data\n Provider" as C
participant "Frontend\n Web App" as FWA
participant "Solana\n Smart\n Contract" as SC
participant "DevOps\n Microservice" as API
participant "Trusted\n Execution\n Environment" as TEE
participant "Solana\n Blockchain" as SB

C -> FWA: 1. Submit request\n(JSON Schema, JSON data)
FWA -> FWA: 2. Perform schema validation

alt Schema validation successful
    FWA -> C: 3. Schema validation passed
    C -> FWA: 4. Define pool and DRTs\nspecifications (SHA256 hash,\nGitHub reference, amount, etc.)
    
    FWA -> SC: 5. Initialize pool using\nsmart contract
    activate SC
    SC -> SB: 6. Mint Ownership token(s)
    SB -> C: 7. Ownership tokens(s) allocated
    SC -> FWA: 8. New pool initialized\non chain
    deactivate SC

    FWA -> API: 9. Request new enclave deployment
    
    API -> TEE: 10. Deploy new enclave\ninstance
    activate TEE
    TEE -> API: 11. TEE deployed\nsuccessfully
    deactivate TEE
    API -> FWA: 12. Return TEE instance details
    
    FWA -[#grey]-> TEE: <color:grey>a. (Optionally) Request TEE attestation</color>
    TEE -[#grey]-> TEE: <color:grey>b. Perform attestation</color>
    TEE -[#grey]-> FWA: <color:grey>c. Attestation result</color>

    FWA -> TEE: 13. Upload data via an  encrypted channel
    TEE -> TEE: 14. Encrypt and store\ndata locally
    TEE -> FWA: 15. Return success
    FWA -> C: 16. Pool creation complete
    
else Schema validation failed
    FWA -> C: 3. Return validation error
end

@enduml