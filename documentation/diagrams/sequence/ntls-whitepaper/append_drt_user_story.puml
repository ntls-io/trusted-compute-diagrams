@startuml append_drt_user_story
!include style.puml

skinparam BoxPadding 10

actor "Data Provider" as C
participant "Frontend Web App" as FWA
participant "Solana Smart Contract" as SC
participant "Trusted Execution Environment" as TEE
participant "Oracle Node" as ON
participant "Solana Blockchain" as SB

FWA -[#grey]-> TEE: <color:grey>a. (Optionally) Request TEE\n<color:grey>attestaton</color>
TEE -[#grey]-> TEE: <color:grey>b. Perform attestation</color>
TEE -[#grey]-> FWA: <color:grey>c. Attestation result</color>


C -> FWA: 1. Submit purchase request for\nAppendDRT token(s) for a specific pool
FWA -> SC: 2. Initiate AppendDRT transaction
activate SC
SC -> FWA: 3. Transaction executed successfully
deactivate SC

C -> FWA: 4. Select pool for AppendDRT operation\nand submit JSON data
FWA -> FWA: 5. Perform schema validation

alt Schema validation successful
    FWA -> C: 6. Schema validation passed
    C -> FWA: 7. Initialize AppendDRT redemption
    FWA -> SC: 8. Redeem AppendDRT for pool on chain
    activate SC
    SC -> FWA: 9. AppendDRT redeemed successfully
    deactivate SC

    FWA -> TEE: 10. Transfer data over encrypted channel
    TEE -> ON: 8. Verify DRT redemption via\nOracle Node(s)
    ON <-> SB: 9. Query Solana and verify\nDRT redemption
    ON -> TEE: 10. Return verification result
    TEE -> TEE: 11. Unseal existing data, append, \n reseal (encrypt) data and store locally
    TEE -> FWA: 12. Return success
    FWA -> C: 13. AppendDRT operation complete
    
else Schema validation failed
    FWA -> C: 6. Return validation error
end

@enduml